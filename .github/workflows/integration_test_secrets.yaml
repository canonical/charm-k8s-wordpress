name: Integration tests with secrets

on:
  workflow_call:
    inputs:
      images:
        description: Existing docker images
        type: string
        default: '[""]'
      runs-on:
        type: string
        description: Image runner for building the images
        default: ubuntu-22.04

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  integration-test-with-secrets:
    runs-on: ${{ inputs.runs-on }}
    name: Integration Tests (test-core secrets)
    steps:
      - uses: actions/checkout@v3
      - name: Setup Devstack Swift
        id: setup-devstack-swift
        uses: canonical/setup-devstack-swift@v1
      - name: Create OpenStack credential file
        run: echo "${{ steps.setup-devstack-swift.outputs.credentials }}" > openrc
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
      - name: Enable microk8s plugins
        run: |
          sudo microk8s enable hostpath-storage ingress
          sudo microk8s kubectl -n kube-system rollout status -w deployment/hostpath-provisioner
          sudo microk8s kubectl -n ingress rollout status -w daemonset.apps/nginx-ingress-microk8s-controller
      - name: Dump microk8s config
        run: sudo microk8s config > kube-config
      - name: Install tox
        run: python3 -m pip install tox
      - name: Build docker image
        run: tox -e test-build
      - name: Run integration tests
        run: |
          args=""
          for image_name in $(echo '${{ inputs.images }}' | jq -cr '.[]'); do
            if [ ${{ github.event.pull_request.head.repo.fork }} = "true" ]; then
              args="${args} --${image_name}-image localhost:32000/${image_name}:latest"
            else
              args="${args} --${image_name}-image ${{ env.REGISTRY }}/${{ env.OWNER }}/${image_name}:${{ github.run_id }}"
            fi
          done

          tox -e integration -- \
          -m requires_secret \
          --akismet-api-key ${{ secrets.TEST_AKISMET_API_KEY }} \
          --openid-username ${{ secrets.TEST_OPENID_USERNAME }} \
          --openid-password ${{ secrets.TEST_OPENID_PASSWORD }} \
          --kube-config ${GITHUB_WORKSPACE}/kube-config \
          --launchpad-team ${{ secrets.TEST_LAUNCHPAD_TEAM }} \
          -k test_core \
          $args
